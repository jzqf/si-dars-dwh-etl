<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <groupId>com.qfree.bo.dars</groupId>
        <artifactId>dars-pom</artifactId>
        <version>1.6.1</version>
    </parent>

    <modelVersion>4.0.0</modelVersion>
    <artifactId>dars-dwh-etl</artifactId>
    <version>1.11.0-SNAPSHOT</version>
    <name>DARS OBO DWH Framework</name>
    <description>ETL framework for DARS OBO data warehouse</description>

    <properties>
        <app.rootDir>/opt/qfree</app.rootDir>
        <app.name>dwh-etl</app.name>	<!-- artifactId without the "dars-" prefix -->
        <app.user>dwh_etl</app.user>
        <app.UID>530</app.UID>
        <app.group>qfree</app.group>
    </properties>

    <build>
        <plugins>

            <!--
            <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <executions>
                            <execution>
                                    <goals>
                                            <goal>test-jar</goal>
                                    </goals>
                            </execution>
                    </executions>
            </plugin>
            -->

            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <configuration>
                    <!-- This issue no longer exists, so it is no longer necessary to use
                                     \${line.separator} in properties files. With earlier versions of
                                     PDI, it was necessary to use "${line.separator}" to represent a
                                     line break (used in email templates). For some reason, using "\n"
                                     did not work properly. Now, it seems that "\n" can be use without
                                     introducing any problems, so all occurrences of "${line.separator}"
                                     have been eliminated.

                                     However, I will leave this block here for the time being in case
                                     this issue reappears in some form. Eventually, this block,
                                     including the element <escapeString>\</escapeString>, can be deleted.

                                     Description of problem that no longer exists:

                                     Setting the "escape string" was necessary in order to include the
                                     references that represent newline characters in the kettle.properties
                                     file.

                                     If "${line.separator}" is used in kettle.properties, then
                                     "maven-resources-plugin" will replace such occurrences with newline
                                     characters when it filters the file, which is not allowed for Java
                                     property values. The reference "${line.separator}" evaluates to a
                                     newline character when processed by *either* Maven *or* PDI.

                                     By escaping these references as "\${line.separator}", Maven will
                                     replace these references with "${line.separator}", which PDI will
                                     treat as newlines, as intended. In this way, no line breaks are
                                     introduced when "maven-resources-plugin" filters the file
                                     kettle.properties.

                                     This trick is only needed because I filter kettle.properties with
                                     "maven-resources-plugin". The reason I do this is so that the line:

                                         QF_ETL_CODE_VERSION=${project.version}

                                     will have ${project.version} replaced with the Maven project
                                     version so that it can be displayed when the ETL code is run.

                                     PDI is supposed to also support an alternate syntax for variable
                                     references, "%%variable%%", which would be a better way to hide
                                     newline references from "maven-resources-plugin" during filtering,
                                     but I was not able to get this syntax to work when a PDI job is
                                     run.

                                     The files dwh.properties & dwh-qfree.properties also contain
                                     "\${line.separator}" references, even though these files are not
                                     filtered by "maven-resources-plugin". However, after running
                                     merge_configuration_files.jar, these references will make their
                                     way into kettle.properties, so the references are also escaped
                                     in dwh.properties & dwh-qfree.properties.

                         However, when merge_configuration_files.jar is executed on an
                         installation *after* the Debian package has been installed, this
                         means that kettle.properties might contain the escaped versions of
                         these references, i.e., "\${line.separator}", not "${line.separator}".
                         Fortunately, PDI processes the escaped reference identically to
                         how it processes the unescaped reference, so everything will work
                         out OK and newlines are inserted when "\${line.separator}" is evaluated
                         in PDI as a PDI variable. Actually, testing shows that the Java
                         code in merge_configuration_files.jar actually writes out
                         "${line.separator}", not "\${line.separator}", so the escaped
                         string is not even seen by PDI; however, it is good to know that
                         the escaped version will not cause problems if it *does* appear
                         in kettle.properties somehow.
                    -->
                    <escapeString>\</escapeString>
                </configuration>
                <executions>

                    <!-- This is so that ${project.version} in config.properties
                         gets replaced with this project's current version.
                    -->
                    <execution>
                        <id>filter-config.properties</id>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <phase>process-resources</phase>
                        <configuration>
                            <outputDirectory>target/classes</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/resources</directory>
                                    <filtering>true</filtering>
                                    <includes>
                                        <include>config.properties</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>

                    <execution>
                        <id>filter-jdeb-files</id>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <phase>process-resources</phase>
                        <configuration>
                            <outputDirectory>${project.build.directory}/jdeb-resources</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/deb/control</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>

                    <execution>
                        <id>filter-kettle-files</id>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <phase>process-resources</phase>
                        <configuration>
                            <outputDirectory>${project.build.directory}/generated-config</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>pdi_config/.kettle</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>

                    <execution>
                        <id>filter-template-files</id>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <phase>process-resources</phase>
                        <configuration>
                            <outputDirectory>${project.build.directory}/generated-templates</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>templates</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>

                    <execution>
                        <id>filter-shell-scripts</id>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <phase>process-resources</phase>
                        <configuration>
                            <outputDirectory>${project.build.directory}/generated-scripts</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>bin</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>

                </executions>
            </plugin>

            <!-- This plugin must appear before the "jdeb" plugin so that the JAR
                 file "merge_configuration_files.jar" is generated before it is
                 packaged in the Debian package.
            -->



            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <executions>
                    <execution>
                        <id>make-assembly</id>	<!-- this is used for inheritance merges -->
                        <phase>package</phase>	<!-- bind to the packaging phase -->
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <descriptorRefs>
                                <descriptorRef>jar-with-dependencies</descriptorRef>
                            </descriptorRefs>
                            <finalName>merge_configuration_files</finalName>
                            <appendAssemblyId>false</appendAssemblyId>	<!-- Suppress "-jar-with-dependencies.jar" suffix in JAR name -->
                            <attach>false</attach>						<!-- This avoids a Maven warning during build -->
                            <archive>
                                <manifest>
                                    <!-- MainClass in manifest to make an executable jar -->
                                    <mainClass>com.qfree.bo.dars.dwh.MergeProperties</mainClass>
                                </manifest>
                            </archive>
                        </configuration>
                    </execution>
                    <execution>
                        <id>make-db-zip</id>	<!-- this is used for inheritance merges -->
                        <phase>package</phase>	<!-- bind to the packaging phase -->
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <descriptors>
                                <descriptor>src/assembly/database.xml</descriptor>
                            </descriptors>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.vafer</groupId>
                <artifactId>jdeb</artifactId>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>jdeb</goal>
                        </goals>
                        <configuration>
                            <controlDir>${project.build.directory}/jdeb-resources</controlDir>
                            <timestamped>true</timestamped>
                            <dataSet>

                                <data>
                                    <type>template</type>
                                    <paths>
                                        <path>${app.rootDir}/${app.user}/bin</path>
                                        <path>${app.rootDir}/${app.user}/conf</path>
                                        <path>${app.rootDir}/${app.user}/lib</path>
                                        <path>${app.rootDir}/${app.user}/logs</path>
                                        <path>${app.rootDir}/${app.user}/logs/oldlogs</path>
                                        <path>${app.rootDir}/${app.user}/pdi_config</path>
                                        <path>${app.rootDir}/${app.user}/pdi_repository</path>
                                    </paths>
                                    <mapper>
                                        <type>perm</type>
                                        <user>${app.user}</user>
                                        <group>${app.group}</group>
                                    </mapper>
                                </data>

                                <!-- <data>
                                    <src>${basedir}/bin</src>
                                    <type>directory</type>
                                    <includes>*.sh</includes>
                                    <mapper>
                                        <type>perm</type>
                                        <prefix>${app.rootDir}/${app.user}/bin</prefix>
                                        <user>${app.user}</user>
                                        <group>${app.group}</group>
                                        <filemode>755</filemode>
                                    </mapper>
                                </data> -->
                                <data>
                                    <src>${project.build.directory}/generated-scripts</src>
                                    <type>directory</type>
                                    <includes>*.sh</includes>
                                    <mapper>
                                        <type>perm</type>
                                        <prefix>${app.rootDir}/${app.user}/bin</prefix>
                                        <user>${app.user}</user>
                                        <group>${app.group}</group>
                                        <filemode>755</filemode>
                                    </mapper>
                                </data>

                                <data>
                                    <src>${basedir}/lib</src>
                                    <type>directory</type>
                                    <includes>**/*</includes>
                                    <mapper>
                                        <type>perm</type>
                                        <prefix>${app.rootDir}/${app.user}/lib</prefix>
                                        <user>${app.user}</user>
                                        <group>${app.group}</group>
                                        <filemode>644</filemode>
                                    </mapper>
                                </data>

                                <data>
                                    <src>${basedir}/target/merge_configuration_files.jar</src>
                                    <type>file</type>
                                    <!-- <includes>merge_configuration_files.jar</includes> -->
                                    <mapper>
                                        <type>perm</type>
                                        <prefix>${app.rootDir}/${app.user}/lib</prefix>
                                        <user>${app.user}</user>
                                        <group>${app.group}</group>
                                        <filemode>644</filemode>
                                    </mapper>
                                </data>

                                <data>
                                    <src>${basedir}/logs</src>
                                    <type>directory</type>
                                    <includes>*</includes>
                                    <excludes>*.log</excludes>
                                    <mapper>
                                        <type>perm</type>
                                        <prefix>${app.rootDir}/${app.user}/logs</prefix>
                                        <user>${app.user}</user>
                                        <group>${app.group}</group>
                                        <filemode>644</filemode>
                                    </mapper>
                                </data>

                                <!--
                                <data>
                                    <src>${basedir}/pdi_config/simple_jndi</src>
                                    <type>directory</type>
                                    <includes>jdbc.properties</includes>
                                    <mapper>
                                        <type>perm</type>
                                        <prefix>${app.rootDir}/${app.user}/pdi_config/simple_jndi</prefix>
                                        <user>${app.user}</user>
                                        <group>${app.group}</group>
                                        <filemode>644</filemode>
                                    </mapper>
                                </data>
                                -->
                                <data>
                                    <src>${basedir}/pdi_config/.kettle</src>
                                    <type>directory</type>
                                    <includes>*,**/*</includes>
                                    <excludes>.gitignore, kettle.properties</excludes>
                                    <mapper>
                                        <type>perm</type>
                                        <prefix>${app.rootDir}/${app.user}/pdi_config/.kettle</prefix>
                                        <user>${app.user}</user>
                                        <group>${app.group}</group>
                                        <filemode>644</filemode>
                                    </mapper>
                                </data>
                                <data>
                                    <src>${project.build.directory}/generated-config/kettle.properties</src>
                                    <type>file</type>
                                    <mapper>
                                        <type>perm</type>
                                        <prefix>${app.rootDir}/${app.user}/pdi_config/.kettle</prefix>
                                        <user>${app.user}</user>
                                        <group>${app.group}</group>
                                        <filemode>644</filemode>
                                    </mapper>
                                </data>

                                <data>
                                    <src>${basedir}/pdi_repository</src>
                                    <type>directory</type>
                                    <includes>*.kdb</includes>
                                    <mapper>
                                        <type>perm</type>
                                        <prefix>${app.rootDir}/${app.user}/pdi_repository</prefix>
                                        <user>${app.user}</user>
                                        <group>${app.group}</group>
                                        <filemode>644</filemode>
                                    </mapper>
                                </data>
                                <!--
                                <data>
                                    <src>${basedir}/pdi_repository/data_mart</src>
                                    <type>directory</type>
                                    <includes>*,**/*</includes>
                                    <mapper>
                                        <type>perm</type>
                                        <prefix>${app.rootDir}/${app.user}/pdi_repository/data_mart</prefix>
                                        <user>${app.user}</user>
                                        <group>${app.group}</group>
                                        <filemode>644</filemode>
                                    </mapper>
                                </data>
                                -->
                                <!--
                                <data>
                                    <src>${basedir}/pdi_repository/dwh</src>
                                    <type>directory</type>
                                    <includes>*,**/*</includes>
                                    <mapper>
                                        <type>perm</type>
                                        <prefix>${app.rootDir}/${app.user}/pdi_repository/dwh</prefix>
                                        <user>${app.user}</user>
                                        <group>${app.group}</group>
                                        <filemode>644</filemode>
                                    </mapper>
                                </data>
                                -->
                                <data>
                                    <src>${basedir}/pdi_repository/dsa</src>
                                    <type>directory</type>
                                    <includes>*,**/*</includes>
                                    <mapper>
                                        <type>perm</type>
                                        <prefix>${app.rootDir}/${app.user}/pdi_repository/dsa</prefix>
                                        <user>${app.user}</user>
                                        <group>${app.group}</group>
                                        <filemode>644</filemode>
                                    </mapper>
                                </data>
                                <data>
                                    <src>${basedir}/pdi_repository/generic</src>
                                    <type>directory</type>
                                    <includes>*,**/*</includes>
                                    <mapper>
                                        <type>perm</type>
                                        <prefix>${app.rootDir}/${app.user}/pdi_repository/generic</prefix>
                                        <user>${app.user}</user>
                                        <group>${app.group}</group>
                                        <filemode>644</filemode>
                                    </mapper>
                                </data>
                                <data>
                                    <src>${basedir}/pdi_repository/psa</src>
                                    <type>directory</type>
                                    <includes>*,**/*</includes>
                                    <mapper>
                                        <type>perm</type>
                                        <prefix>${app.rootDir}/${app.user}/pdi_repository/psa</prefix>
                                        <user>${app.user}</user>
                                        <group>${app.group}</group>
                                        <filemode>644</filemode>
                                    </mapper>
                                </data>

                                <data>
                                    <src>${project.build.directory}/generated-templates/${app.name}.cron</src>
                                    <type>file</type>
                                    <dst>${app.name}</dst>
                                    <mapper>
                                        <type>perm</type>
                                        <prefix>/etc/cron.d/</prefix>
                                        <user>root</user>
                                        <group>root</group>
                                        <filemode>644</filemode>
                                    </mapper>
                                </data>
                                <data>
                                    <src>${project.build.directory}/generated-templates/${app.name}.env</src>
                                    <type>file</type>
                                    <dst>${app.name}-env.sh</dst>
                                    <mapper>
                                        <type>perm</type>
                                        <prefix>${app.rootDir}/${app.user}/bin</prefix>
                                        <user>${app.user}</user>
                                        <group>${app.group}</group>
                                        <filemode>755</filemode>
                                    </mapper>
                                </data>
                                <data>
                                    <src>${project.build.directory}/generated-templates/${app.name}.logrotate</src>
                                    <type>file</type>
                                    <dst>${app.name}</dst>
                                    <mapper>
                                        <type>perm</type>
                                        <prefix>/etc/logrotate.d/</prefix>
                                        <user>root</user>
                                        <group>root</group>
                                        <filemode>644</filemode>
                                    </mapper>
                                </data>
                                <!--								 <data> -->
                                <!--									 <src>${basedir}/templates</src> -->
                                <!--									 <type>directory</type> -->
                                <!--									 <includes>*.*</includes> -->
                                <!--									 <mapper> -->
                                <!--										 <type>perm</type> -->
                                <!--										 <prefix>${app.rootDir}/${app.user}/templates</prefix> -->
                                <!--										 <user>${app.user}</user> -->
                                <!--										 <group>${app.group}</group> -->
                                <!--										 <filemode>644</filemode> -->
                                <!--									 </mapper> -->
                                <!--								 </data> -->

                            </dataSet>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
